Start test section vessel
-------------------------

>> Start Test J.0 Checking _Section_leaf_node_base {
J.1.0=1 New _Section_leaf_node_base section_leaf_node_base = _Section_leaf_node_base()
J.1.1=1 Verifying default constructor. Checkout whether section_leaf_node_base._next is nullptr: 0 ,expected nullptr; Checkout whether section_leaf_node_base._prev is nullptr: 0 ,expected nullptr;
J.1.2=1 Construct Val by pointers to _Section_leaf_node_base: `_Section_leaf_node_base section_leaf_node_base2(&section_leaf_node_base, &section_leaf_node_base);`
J.1.3=1 Verifying constructor. section_leaf_node_base2._prev: 0x7fffffffe170, expected 0x7fffffffe170. ._next: 0x7fffffffe170, expected 0x7fffffffe170
} succeeded(4/4). Pass test J.1.

>> Start Test J.1 Checking _Section_tree_node_base {
J.2.0=1 New _Section_tree_node_base section_tree_node_base = _Section_tree_node_base()
J.2.1=1 Verifying default constructor. section_tree_node_base._left: 0, expected nullptr. section_tree_node_base._right:0, expected nullptr. section_tree_node_base._parent: 0, expected nullptr.
J.2.2=1 Construct section_tree_node_base2 by pointers to ._Section_tree_node_base: `_Section_tree_node_base section_tree_node_base2(&tb, &tb, &tb);`
J.2.3=1 Verifying constructor. section_node_base2._parent: 0x7fffffffe170, expected 0x7fffffffe170. ._left: 0x7fffffffe170, expected 0x7fffffffe170. ._right: 0x7fffffffe170, expected: 0x7fffffffe170
} succeeded(4/4). Pass test J.2.

>> Start Test J.2 Checking _Section_node_header {
J.3.0=1 New _Section_node_header, show its ._parent: 0, ._right: 0x7fffffffe0f0, ._left: 0x7fffffffe0f0
J.3.1=1 Verify section_node_header's ._size: 0, .node_count: 0, both expected 0
J.3.2=1 New _Section_node_header section_node_header2 constructed by section_node_header.
J.3.3=1 Checkout whether section_node_header2's ._left: 0x7fffffffe130, ._right: 0x7fffffffe130, this: 0x7fffffffe130, expected equal.
J.3.4=1 New _Section_node_header section_node_header4 cannot constructed by const section_node_header&.
J.3.5=1 New _Section_node_header section_node_header5 connected section_node_header forming a circle.
J.3.6=1 New _Section_node_header section_node_header6 constructed by section_node_header5.
J.3.7=1 Check whether section_node_header and section_node_header6 forms a circle, section_node_header's this: 0x7fffffffe0f0, ._left: 0x7fffffffe1c0, ._right: 0x7fffffffe1c0, section_node_header6's this: 0x7fffffffe1c0, ._left: 0x7fffffffe0f0, ._right: 0x7fffffffe0f0
J.3.8=1 Check whether section_node_header5 is reconstructed by default. section_node_header5' this: 0x7fffffffe170, ._left: 0x7fffffffe170, ._right: 0x7fffffffe170
} succeeded(9/9). Pass test J.3.

>> Start Test J.3 Checking _Section_leaf_node: {
J.4.0=1 Testing _Section_leaf_node, new _Section_leaf_node.
J.4.1=1 1Test whether successfully default construct inherit from _Section_tree_node_base. leaf_node._parent: 0, expected nullptr. leaf_node._left: 0, expected nullptr. .right: 0, expected nullptr.
J.4.2=1 Test whether successfully default construct inherit from _Section_leaf_node_base. leaf_node._prev: 0, expected nullptr. leaf_node._next: 0, expected nullptr.
J.4.3=1 Test whether ._pair member works.
J.4.4=1 Construct pr2 by leaf_node._valptr(), expected *pair<int, int> type. pr2->first = 100, pr2->second = 101, expected (100, 101).
J.4.5=1 Test whether pr2 isn't const, modify it and now, pr2->first = 200, pr2->second = 201, expected (200, 201).
J.4.6=1 Construct pr3 by static_cast<const ...>(leaf_node)._valptr(), expected pr3 as const pair<int, int>. pr3->first = 200, pr3->second = 201, expected (200, 201).
J.4.7=1 pr3 is const, verifying.
} succeeded(8/8). Pass test J.4.

>> Start Test J.4 Checking _Section_tree_node {
J.5.0=1 Testing default constructor: `_Section_tree_node<int, int> section_tree_node;`
J.5.1=1 Testing section_tree_node's_right: 0, expected 0
J.5.2=1 Testing section_tree_node's ._has_mid: 0, expected false.
J.5.3=1 Testing section_tree_node's ._Is_leaf: 0, expected false
J.5.4=1 Testing section_tree_node's _sum: 0, expected 0.
J.5.5=1 Testing section_tree_node successfully inherit from _Section_tree_node_base, show its _left: 0, expected nullptr. ._right: 0, expected nullptr. ._parent: 0, expected nullptr.
} succeeded(6/6). Pass test J.5.

>> Start Test J.5 Checking section base {
J.6.0=1 New section<int, pair<int, int> > sec
J.6.1=1 Checking sec's header.
J.6.2=1 Insert key and value, expected no error
J.6.3=1 Insert another, checking whether its size is right for 2
J.6.4=1 Add new node l1 with value30, and l2 with value20. Then swap them.
J.6.5=1 Test swap, l1's value is 30, expected 30. l2's value is 20, expected 20
J.6.6=1 insert 3, its size is 3, expected 3.
J.6.7=1 insert 4, its size is 4expected 4.
J.6.8=1 Insert (0, 0), then get value of key 0 is 0, expected 0
} succeeded(9/9). Pass test J.6.

>> Start Test J.6 Checking section insert {
J.7.0=1 Construct new section<int, int> sec3, we will insert 5 nodes( (0, 0), (4, 400), (1, 100), (2, 200), (10, 1000) ), and check that we can get values of keys by every insert step.
J.7.1=1 sec3 insert (0, 0).
J.7.2=1 sec3.get(0) = 0, expected 0
J.7.3=1 sec3 insert (4, 400).
J.7.4=1 sec3.get(4) = 400, expected 400
J.7.5=1 sec3.get(0) = 0, expected 0
J.7.6=1 sec3 insert (1, 100).
J.7.7=1 sec3.get(0) = 0, expected 0
J.7.8=1 sec3.get(1) = 100, expected 100
J.7.9=1 sec3.get(4) = 400, expected 400
J.7.10=1 sec3 insert (2, 200).
J.7.11=1 sec3.get(0) = 0, expected 0
J.7.12=1 sec3.get(1) = 100, expected 100
J.7.13=1 sec3.get(2) = 200, expected 200
J.7.14=1 sec3.get(4) = 400, expected 400
J.7.15=1 sec3 insert (10, 1000).
J.7.16=1 sec3.get(0) = 0, expected 0
J.7.17=1 sec3.get(1) = 100, expected 100
J.7.18=1 sec3.get(2) = 200, expected 200
J.7.19=1 sec3.get(4) = 400, expected 400
J.7.20=1 sec3.get(10) = 1000, expected 1000
J.7.21=1 Construct sec4. Then insert 50 nodes, and check their values.
J.7.22=1 check key is 0, with value of 50, expected 50
J.7.23=1 check key is 1, with value of 51, expected 51
J.7.24=1 check key is 2, with value of 52, expected 52
J.7.25=1 check key is 3, with value of 53, expected 53
J.7.26=1 check key is 4, with value of 54, expected 54
J.7.27=1 check key is 5, with value of 55, expected 55
J.7.28=1 check key is 6, with value of 56, expected 56
J.7.29=1 check key is 7, with value of 57, expected 57
J.7.30=1 check key is 8, with value of 58, expected 58
J.7.31=1 check key is 9, with value of 59, expected 59
J.7.32=1 check key is 10, with value of 60, expected 60
J.7.33=1 check key is 11, with value of 61, expected 61
J.7.34=1 check key is 12, with value of 62, expected 62
J.7.35=1 check key is 13, with value of 63, expected 63
J.7.36=1 check key is 14, with value of 64, expected 64
J.7.37=1 check key is 15, with value of 65, expected 65
J.7.38=1 check key is 16, with value of 66, expected 66
J.7.39=1 check key is 17, with value of 67, expected 67
J.7.40=1 check key is 18, with value of 68, expected 68
J.7.41=1 check key is 19, with value of 69, expected 69
J.7.42=1 check key is 20, with value of 70, expected 70
J.7.43=1 check key is 21, with value of 71, expected 71
J.7.44=1 check key is 22, with value of 72, expected 72
J.7.45=1 check key is 23, with value of 73, expected 73
J.7.46=1 check key is 24, with value of 74, expected 74
J.7.47=1 check key is 25, with value of 75, expected 75
J.7.48=1 check key is 26, with value of 76, expected 76
J.7.49=1 check key is 27, with value of 77, expected 77
J.7.50=1 check key is 28, with value of 78, expected 78
J.7.51=1 check key is 29, with value of 79, expected 79
J.7.52=1 check key is 30, with value of 80, expected 80
J.7.53=1 check key is 31, with value of 81, expected 81
J.7.54=1 check key is 32, with value of 82, expected 82
J.7.55=1 check key is 33, with value of 83, expected 83
J.7.56=1 check key is 34, with value of 84, expected 84
J.7.57=1 check key is 35, with value of 85, expected 85
J.7.58=1 check key is 36, with value of 86, expected 86
J.7.59=1 check key is 37, with value of 87, expected 87
J.7.60=1 check key is 38, with value of 88, expected 88
J.7.61=1 check key is 39, with value of 89, expected 89
J.7.62=1 check key is 40, with value of 90, expected 90
J.7.63=1 check key is 41, with value of 91, expected 91
J.7.64=1 check key is 42, with value of 92, expected 92
J.7.65=1 check key is 43, with value of 93, expected 93
J.7.66=1 check key is 44, with value of 94, expected 94
J.7.67=1 check key is 45, with value of 95, expected 95
J.7.68=1 check key is 46, with value of 96, expected 96
J.7.69=1 check key is 47, with value of 97, expected 97
J.7.70=1 check key is 48, with value of 98, expected 98
J.7.71=1 check key is 49, with value of 99, expected 99
J.7.72=1 Construct section sec5. Then insert 100 nodes with (0, 0), (1, 1), (2, 2), ..., (11, 11).
J.7.73=1 sec5.get(0) = 0
J.7.74=1 sec5.get(1) = 1
J.7.75=1 sec5.get(2) = 2
J.7.76=1 sec5.get(3) = 3
J.7.77=1 sec5.get(4) = 4
J.7.78=1 sec5.get(5) = 5
J.7.79=1 sec5.get(6) = 6
J.7.80=1 sec5.get(7) = 7
J.7.81=1 sec5.get(8) = 8
J.7.82=1 sec5.get(9) = 9
J.7.83=1 sec5.get(10) = 10
J.7.84=1 sec5.get(11) = 11
J.7.85=1 Construct section sec6. Then insert 100 nodes with (0, 0), (1, 1), (2, 2), ..., (99, 99).
J.7.86=1 sec6.get(0) = 0
J.7.87=1 sec6.get(1) = 1
J.7.88=1 sec6.get(2) = 2
J.7.89=1 sec6.get(3) = 3
J.7.90=1 sec6.get(4) = 4
J.7.91=1 sec6.get(5) = 5
J.7.92=1 sec6.get(6) = 6
J.7.93=1 sec6.get(7) = 7
J.7.94=1 sec6.get(8) = 8
J.7.95=1 sec6.get(9) = 9
J.7.96=1 sec6.get(10) = 10
J.7.97=1 sec6.get(11) = 11
J.7.98=1 sec6.get(12) = 12
J.7.99=1 sec6.get(13) = 13
J.7.100=1 sec6.get(14) = 14
J.7.101=1 sec6.get(15) = 15
J.7.102=1 sec6.get(16) = 16
J.7.103=1 sec6.get(17) = 17
J.7.104=1 sec6.get(18) = 18
J.7.105=1 sec6.get(19) = 19
J.7.106=1 sec6.get(20) = 20
J.7.107=1 sec6.get(21) = 21
J.7.108=1 sec6.get(22) = 22
J.7.109=1 sec6.get(23) = 23
J.7.110=1 sec6.get(24) = 24
J.7.111=1 sec6.get(25) = 25
J.7.112=1 sec6.get(26) = 26
J.7.113=1 sec6.get(27) = 27
J.7.114=1 sec6.get(28) = 28
J.7.115=1 sec6.get(29) = 29
J.7.116=1 sec6.get(30) = 30
J.7.117=1 sec6.get(31) = 31
J.7.118=1 sec6.get(32) = 32
J.7.119=1 sec6.get(33) = 33
J.7.120=1 sec6.get(34) = 34
J.7.121=1 sec6.get(35) = 35
J.7.122=1 sec6.get(36) = 36
J.7.123=1 sec6.get(37) = 37
J.7.124=1 sec6.get(38) = 38
J.7.125=1 sec6.get(39) = 39
J.7.126=1 sec6.get(40) = 40
J.7.127=1 sec6.get(41) = 41
J.7.128=1 sec6.get(42) = 42
J.7.129=1 sec6.get(43) = 43
J.7.130=1 sec6.get(44) = 44
J.7.131=1 sec6.get(45) = 45
J.7.132=1 sec6.get(46) = 46
J.7.133=1 sec6.get(47) = 47
J.7.134=1 sec6.get(48) = 48
J.7.135=1 sec6.get(49) = 49
J.7.136=1 sec6.get(50) = 50
J.7.137=1 sec6.get(51) = 51
J.7.138=1 sec6.get(52) = 52
J.7.139=1 sec6.get(53) = 53
J.7.140=1 sec6.get(54) = 54
J.7.141=1 sec6.get(55) = 55
J.7.142=1 sec6.get(56) = 56
J.7.143=1 sec6.get(57) = 57
J.7.144=1 sec6.get(58) = 58
J.7.145=1 sec6.get(59) = 59
J.7.146=1 sec6.get(60) = 60
J.7.147=1 sec6.get(61) = 61
J.7.148=1 sec6.get(62) = 62
J.7.149=1 sec6.get(63) = 63
J.7.150=1 sec6.get(64) = 64
J.7.151=1 sec6.get(65) = 65
J.7.152=1 sec6.get(66) = 66
J.7.153=1 sec6.get(67) = 67
J.7.154=1 sec6.get(68) = 68
J.7.155=1 sec6.get(69) = 69
J.7.156=1 sec6.get(70) = 70
J.7.157=1 sec6.get(71) = 71
J.7.158=1 sec6.get(72) = 72
J.7.159=1 sec6.get(73) = 73
J.7.160=1 sec6.get(74) = 74
J.7.161=1 sec6.get(75) = 75
J.7.162=1 sec6.get(76) = 76
J.7.163=1 sec6.get(77) = 77
J.7.164=1 sec6.get(78) = 78
J.7.165=1 sec6.get(79) = 79
J.7.166=1 sec6.get(80) = 80
J.7.167=1 sec6.get(81) = 81
J.7.168=1 sec6.get(82) = 82
J.7.169=1 sec6.get(83) = 83
J.7.170=1 sec6.get(84) = 84
J.7.171=1 sec6.get(85) = 85
J.7.172=1 sec6.get(86) = 86
J.7.173=1 sec6.get(87) = 87
J.7.174=1 sec6.get(88) = 88
J.7.175=1 sec6.get(89) = 89
J.7.176=1 sec6.get(90) = 90
J.7.177=1 sec6.get(91) = 91
J.7.178=1 sec6.get(92) = 92
J.7.179=1 sec6.get(93) = 93
J.7.180=1 sec6.get(94) = 94
J.7.181=1 sec6.get(95) = 95
J.7.182=1 sec6.get(96) = 96
J.7.183=1 sec6.get(97) = 97
J.7.184=1 sec6.get(98) = 98
J.7.185=1 sec6.get(99) = 99
J.7.186=1 Query sum from 15 to 16, the result is 15, expected result 15
J.7.187=1 Query sum from 15 to 17, the result is 31, expected result 31
J.7.188=1 Query sum from 15 to 18, the result is 48, expected result 48
J.7.189=1 Query sum from 15 to 19, the result is 66, expected result 66
J.7.190=1 Query sum from 15 to 20, the result is 85, expected result 85
J.7.191=1 Query sum from 15 to 21, the result is 105, expected result 105
J.7.192=1 Query sum from 15 to 22, the result is 126, expected result 126
J.7.193=1 Query sum from 15 to 23, the result is 148, expected result 148
J.7.194=1 Query sum from 15 to 24, the result is 171, expected result 171
J.7.195=1 Query sum from 15 to 25, the result is 195, expected result 195
J.7.196=1 Query sum from 15 to 26, the result is 220, expected result 220
J.7.197=1 Query sum from 15 to 27, the result is 246, expected result 246
J.7.198=1 Query sum from 15 to 28, the result is 273, expected result 273
J.7.199=1 Query sum from 15 to 29, the result is 301, expected result 301
J.7.200=1 Query sum from 15 to 30, the result is 330, expected result 330
J.7.201=1 Query sum from 15 to 31, the result is 360, expected result 360
J.7.202=1 Query sum from 15 to 32, the result is 391, expected result 391
J.7.203=1 Query sum from 15 to 33, the result is 423, expected result 423
J.7.204=1 Query sum from 15 to 34, the result is 456, expected result 456
J.7.205=1 Query sum from 15 to 35, the result is 490, expected result 490
J.7.206=1 Query sum from 15 to 36, the result is 525, expected result 525
J.7.207=1 Query sum from 15 to 37, the result is 561, expected result 561
J.7.208=1 Query sum from 15 to 38, the result is 598, expected result 598
J.7.209=1 Query sum from 15 to 39, the result is 636, expected result 636
J.7.210=1 Query sum from 15 to 40, the result is 675, expected result 675
J.7.211=1 Query sum from 15 to 41, the result is 715, expected result 715
J.7.212=1 Query sum from 15 to 42, the result is 756, expected result 756
J.7.213=1 Query sum from 15 to 43, the result is 798, expected result 798
J.7.214=1 Query sum from 15 to 44, the result is 841, expected result 841
J.7.215=1 Query sum from 15 to 45, the result is 885, expected result 885
J.7.216=1 Query sum from 15 to 46, the result is 930, expected result 930
J.7.217=1 Query sum from 15 to 47, the result is 976, expected result 976
J.7.218=1 Query sum from 15 to 48, the result is 1023, expected result 1023
J.7.219=1 Query sum from 15 to 49, the result is 1071, expected result 1071
J.7.220=1 Query sum from 15 to 50, the result is 1120, expected result 1120
J.7.221=1 Query sum from 15 to 51, the result is 1170, expected result 1170
J.7.222=1 Query sum from 15 to 52, the result is 1221, expected result 1221
J.7.223=1 Query sum from 15 to 53, the result is 1273, expected result 1273
J.7.224=1 Query sum from 15 to 54, the result is 1326, expected result 1326
J.7.225=1 Query sum from 15 to 55, the result is 1380, expected result 1380
J.7.226=1 Query sum from 15 to 56, the result is 1435, expected result 1435
J.7.227=1 Query sum from 15 to 57, the result is 1491, expected result 1491
J.7.228=1 Query sum from 15 to 58, the result is 1548, expected result 1548
J.7.229=1 Query sum from 15 to 59, the result is 1606, expected result 1606
J.7.230=1 Query sum from 15 to 60, the result is 1665, expected result 1665
J.7.231=1 Query sum from 15 to 61, the result is 1725, expected result 1725
J.7.232=1 Query sum from 15 to 62, the result is 1786, expected result 1786
J.7.233=1 Query sum from 15 to 63, the result is 1848, expected result 1848
J.7.234=1 Query sum from 15 to 64, the result is 1911, expected result 1911
J.7.235=1 Query sum from 15 to 65, the result is 1975, expected result 1975
J.7.236=1 Query sum from 15 to 66, the result is 2040, expected result 2040
J.7.237=1 Query sum from 15 to 67, the result is 2106, expected result 2106
J.7.238=1 Query sum from 15 to 68, the result is 2173, expected result 2173
J.7.239=1 Query sum from 15 to 69, the result is 2241, expected result 2241
J.7.240=1 Query sum from 15 to 70, the result is 2310, expected result 2310
J.7.241=1 Query sum from 15 to 71, the result is 2380, expected result 2380
J.7.242=1 Query sum from 15 to 72, the result is 2451, expected result 2451
J.7.243=1 Query sum from 15 to 73, the result is 2523, expected result 2523
J.7.244=1 Query sum from 15 to 74, the result is 2596, expected result 2596
J.7.245=1 Query sum from 15 to 75, the result is 2670, expected result 2670
J.7.246=1 Query sum from 15 to 76, the result is 2745, expected result 2745
J.7.247=1 Query sum from 15 to 77, the result is 2821, expected result 2821
J.7.248=1 Query sum from 15 to 78, the result is 2898, expected result 2898
J.7.249=1 Query sum from 15 to 79, the result is 2976, expected result 2976
J.7.250=1 Query sum from 15 to 80, the result is 3055, expected result 3055
J.7.251=1 Query sum from 15 to 81, the result is 3135, expected result 3135
J.7.252=1 Query sum from 15 to 82, the result is 3216, expected result 3216
J.7.253=1 Query sum from 15 to 83, the result is 3298, expected result 3298
J.7.254=1 Query sum from 15 to 84, the result is 3381, expected result 3381
J.7.255=1 Query sum from 15 to 85, the result is 3465, expected result 3465
J.7.256=1 Query sum from 15 to 86, the result is 3550, expected result 3550
J.7.257=1 Query sum from 15 to 87, the result is 3636, expected result 3636
J.7.258=1 Query sum from 15 to 88, the result is 3723, expected result 3723
J.7.259=1 Query sum from 15 to 89, the result is 3811, expected result 3811
J.7.260=1 Query sum from 15 to 90, the result is 3900, expected result 3900
J.7.261=1 Query sum from 15 to 91, the result is 3990, expected result 3990
J.7.262=1 Query sum from 15 to 92, the result is 4081, expected result 4081
J.7.263=1 Query sum from 15 to 93, the result is 4173, expected result 4173
J.7.264=1 Query sum from 15 to 94, the result is 4266, expected result 4266
J.7.265=1 Query sum from 15 to 95, the result is 4360, expected result 4360
J.7.266=1 Query sum from 15 to 96, the result is 4455, expected result 4455
J.7.267=1 Query sum from 15 to 97, the result is 4551, expected result 4551
J.7.268=1 Query sum from 15 to 98, the result is 4648, expected result 4648
J.7.269=1 Query sum from 15 to 99, the result is 4746, expected result 4746
J.7.270=1 Query sum from 0 to 125(The max key in tree is 99), get sum of 4950, expected 4950
J.7.271=1 Query sum from 1 to 125(The max key in tree is 99), get sum of 4950, expected 4950
J.7.272=1 Query sum from 2 to 125(The max key in tree is 99), get sum of 4949, expected 4949
J.7.273=1 Query sum from 3 to 125(The max key in tree is 99), get sum of 4947, expected 4947
J.7.274=1 Query sum from 4 to 125(The max key in tree is 99), get sum of 4944, expected 4944
J.7.275=1 Query sum from 5 to 125(The max key in tree is 99), get sum of 4940, expected 4940
J.7.276=1 Query sum from 6 to 125(The max key in tree is 99), get sum of 4935, expected 4935
J.7.277=1 Query sum from 7 to 125(The max key in tree is 99), get sum of 4929, expected 4929
J.7.278=1 Query sum from 8 to 125(The max key in tree is 99), get sum of 4922, expected 4922
J.7.279=1 Query sum from 9 to 125(The max key in tree is 99), get sum of 4914, expected 4914
J.7.280=1 Query sum from 10 to 125(The max key in tree is 99), get sum of 4905, expected 4905
J.7.281=1 Query sum from 11 to 125(The max key in tree is 99), get sum of 4895, expected 4895
J.7.282=1 Query sum from 12 to 125(The max key in tree is 99), get sum of 4884, expected 4884
J.7.283=1 Query sum from 13 to 125(The max key in tree is 99), get sum of 4872, expected 4872
J.7.284=1 Query sum from 14 to 125(The max key in tree is 99), get sum of 4859, expected 4859
J.7.285=1 Query sum from 15 to 125(The max key in tree is 99), get sum of 4845, expected 4845
J.7.286=1 Query sum from 16 to 125(The max key in tree is 99), get sum of 4830, expected 4830
J.7.287=1 Query sum from 17 to 125(The max key in tree is 99), get sum of 4814, expected 4814
J.7.288=1 Query sum from 18 to 125(The max key in tree is 99), get sum of 4797, expected 4797
J.7.289=1 Query sum from 19 to 125(The max key in tree is 99), get sum of 4779, expected 4779
J.7.290=1 Query sum from 20 to 125(The max key in tree is 99), get sum of 4760, expected 4760
J.7.291=1 Query sum from 21 to 125(The max key in tree is 99), get sum of 4740, expected 4740
J.7.292=1 Query sum from 22 to 125(The max key in tree is 99), get sum of 4719, expected 4719
J.7.293=1 Query sum from 23 to 125(The max key in tree is 99), get sum of 4697, expected 4697
J.7.294=1 Query sum from 24 to 125(The max key in tree is 99), get sum of 4674, expected 4674
J.7.295=1 Query sum from 25 to 125(The max key in tree is 99), get sum of 4650, expected 4650
J.7.296=1 Query sum from 26 to 125(The max key in tree is 99), get sum of 4625, expected 4625
J.7.297=1 Query sum from 27 to 125(The max key in tree is 99), get sum of 4599, expected 4599
J.7.298=1 Query sum from 28 to 125(The max key in tree is 99), get sum of 4572, expected 4572
J.7.299=1 Query sum from 29 to 125(The max key in tree is 99), get sum of 4544, expected 4544
J.7.300=1 Query sum from 30 to 125(The max key in tree is 99), get sum of 4515, expected 4515
J.7.301=1 Query sum from 31 to 125(The max key in tree is 99), get sum of 4485, expected 4485
J.7.302=1 Query sum from 32 to 125(The max key in tree is 99), get sum of 4454, expected 4454
J.7.303=1 Query sum from 33 to 125(The max key in tree is 99), get sum of 4422, expected 4422
J.7.304=1 Query sum from 34 to 125(The max key in tree is 99), get sum of 4389, expected 4389
J.7.305=1 Query sum from 35 to 125(The max key in tree is 99), get sum of 4355, expected 4355
J.7.306=1 Query sum from 36 to 125(The max key in tree is 99), get sum of 4320, expected 4320
J.7.307=1 Query sum from 37 to 125(The max key in tree is 99), get sum of 4284, expected 4284
J.7.308=1 Query sum from 38 to 125(The max key in tree is 99), get sum of 4247, expected 4247
J.7.309=1 Query sum from 39 to 125(The max key in tree is 99), get sum of 4209, expected 4209
J.7.310=1 Query sum from 40 to 125(The max key in tree is 99), get sum of 4170, expected 4170
J.7.311=1 Query sum from 41 to 125(The max key in tree is 99), get sum of 4130, expected 4130
J.7.312=1 Query sum from 42 to 125(The max key in tree is 99), get sum of 4089, expected 4089
J.7.313=1 Query sum from 43 to 125(The max key in tree is 99), get sum of 4047, expected 4047
J.7.314=1 Query sum from 44 to 125(The max key in tree is 99), get sum of 4004, expected 4004
J.7.315=1 Query sum from 45 to 125(The max key in tree is 99), get sum of 3960, expected 3960
J.7.316=1 Query sum from 46 to 125(The max key in tree is 99), get sum of 3915, expected 3915
J.7.317=1 Query sum from 47 to 125(The max key in tree is 99), get sum of 3869, expected 3869
J.7.318=1 Query sum from 48 to 125(The max key in tree is 99), get sum of 3822, expected 3822
J.7.319=1 Query sum from 49 to 125(The max key in tree is 99), get sum of 3774, expected 3774
J.7.320=1 Query sum from 50 to 125(The max key in tree is 99), get sum of 3725, expected 3725
J.7.321=1 Query sum from 51 to 125(The max key in tree is 99), get sum of 3675, expected 3675
J.7.322=1 Query sum from 52 to 125(The max key in tree is 99), get sum of 3624, expected 3624
J.7.323=1 Query sum from 53 to 125(The max key in tree is 99), get sum of 3572, expected 3572
J.7.324=1 Query sum from 54 to 125(The max key in tree is 99), get sum of 3519, expected 3519
J.7.325=1 Query sum from 55 to 125(The max key in tree is 99), get sum of 3465, expected 3465
J.7.326=1 Query sum from 56 to 125(The max key in tree is 99), get sum of 3410, expected 3410
J.7.327=1 Query sum from 57 to 125(The max key in tree is 99), get sum of 3354, expected 3354
J.7.328=1 Query sum from 58 to 125(The max key in tree is 99), get sum of 3297, expected 3297
J.7.329=1 Query sum from 59 to 125(The max key in tree is 99), get sum of 3239, expected 3239
J.7.330=1 Query sum from 60 to 125(The max key in tree is 99), get sum of 3180, expected 3180
J.7.331=1 Query sum from 61 to 125(The max key in tree is 99), get sum of 3120, expected 3120
J.7.332=1 Query sum from 62 to 125(The max key in tree is 99), get sum of 3059, expected 3059
J.7.333=1 Query sum from 63 to 125(The max key in tree is 99), get sum of 2997, expected 2997
J.7.334=1 Query sum from 64 to 125(The max key in tree is 99), get sum of 2934, expected 2934
J.7.335=1 Query sum from 65 to 125(The max key in tree is 99), get sum of 2870, expected 2870
J.7.336=1 Query sum from 66 to 125(The max key in tree is 99), get sum of 2805, expected 2805
J.7.337=1 Query sum from 67 to 125(The max key in tree is 99), get sum of 2739, expected 2739
J.7.338=1 Query sum from 68 to 125(The max key in tree is 99), get sum of 2672, expected 2672
J.7.339=1 Query sum from 69 to 125(The max key in tree is 99), get sum of 2604, expected 2604
J.7.340=1 Query sum from 70 to 125(The max key in tree is 99), get sum of 2535, expected 2535
J.7.341=1 Query sum from 71 to 125(The max key in tree is 99), get sum of 2465, expected 2465
J.7.342=1 Query sum from 72 to 125(The max key in tree is 99), get sum of 2394, expected 2394
J.7.343=1 Query sum from 73 to 125(The max key in tree is 99), get sum of 2322, expected 2322
J.7.344=1 Query sum from 74 to 125(The max key in tree is 99), get sum of 2249, expected 2249
J.7.345=1 Query sum from 75 to 125(The max key in tree is 99), get sum of 2175, expected 2175
J.7.346=1 Query sum from 76 to 125(The max key in tree is 99), get sum of 2100, expected 2100
J.7.347=1 Query sum from 77 to 125(The max key in tree is 99), get sum of 2024, expected 2024
J.7.348=1 Query sum from 78 to 125(The max key in tree is 99), get sum of 1947, expected 1947
J.7.349=1 Query sum from 79 to 125(The max key in tree is 99), get sum of 1869, expected 1869
J.7.350=1 Query sum from 80 to 125(The max key in tree is 99), get sum of 1790, expected 1790
J.7.351=1 Query sum from 81 to 125(The max key in tree is 99), get sum of 1710, expected 1710
J.7.352=1 Query sum from 82 to 125(The max key in tree is 99), get sum of 1629, expected 1629
J.7.353=1 Query sum from 83 to 125(The max key in tree is 99), get sum of 1547, expected 1547
J.7.354=1 Query sum from 84 to 125(The max key in tree is 99), get sum of 1464, expected 1464
J.7.355=1 Query sum from 85 to 125(The max key in tree is 99), get sum of 1380, expected 1380
J.7.356=1 Query sum from 86 to 125(The max key in tree is 99), get sum of 1295, expected 1295
J.7.357=1 Query sum from 87 to 125(The max key in tree is 99), get sum of 1209, expected 1209
J.7.358=1 Query sum from 88 to 125(The max key in tree is 99), get sum of 1122, expected 1122
J.7.359=1 Query sum from 89 to 125(The max key in tree is 99), get sum of 1034, expected 1034
J.7.360=1 Query sum from 90 to 125(The max key in tree is 99), get sum of 945, expected 945
J.7.361=1 Query sum from 91 to 125(The max key in tree is 99), get sum of 855, expected 855
J.7.362=1 Query sum from 92 to 125(The max key in tree is 99), get sum of 764, expected 764
J.7.363=1 Query sum from 93 to 125(The max key in tree is 99), get sum of 672, expected 672
J.7.364=1 Query sum from 94 to 125(The max key in tree is 99), get sum of 579, expected 579
J.7.365=1 Query sum from 95 to 125(The max key in tree is 99), get sum of 485, expected 485
J.7.366=1 Query sum from 96 to 125(The max key in tree is 99), get sum of 390, expected 390
J.7.367=1 Query sum from 97 to 125(The max key in tree is 99), get sum of 294, expected 294
J.7.368=1 Query sum from 98 to 125(The max key in tree is 99), get sum of 197, expected 197
J.7.369=1 Query sum from 99 to 125(The max key in tree is 99), get sum of 99, expected 99
J.7.370=1 Query sum between -10(The min key in section tree is 0) and 0, get sum of 0, expected i * (i - 1) / 2
J.7.371=1 Query sum between -10(The min key in section tree is 0) and 1, get sum of 0, expected i * (i - 1) / 2
J.7.372=1 Query sum between -10(The min key in section tree is 0) and 2, get sum of 1, expected i * (i - 1) / 2
J.7.373=1 Query sum between -10(The min key in section tree is 0) and 3, get sum of 3, expected i * (i - 1) / 2
J.7.374=1 Query sum between -10(The min key in section tree is 0) and 4, get sum of 6, expected i * (i - 1) / 2
J.7.375=1 Query sum between -10(The min key in section tree is 0) and 5, get sum of 10, expected i * (i - 1) / 2
J.7.376=1 Query sum between -10(The min key in section tree is 0) and 6, get sum of 15, expected i * (i - 1) / 2
J.7.377=1 Query sum between -10(The min key in section tree is 0) and 7, get sum of 21, expected i * (i - 1) / 2
J.7.378=1 Query sum between -10(The min key in section tree is 0) and 8, get sum of 28, expected i * (i - 1) / 2
J.7.379=1 Query sum between -10(The min key in section tree is 0) and 9, get sum of 36, expected i * (i - 1) / 2
J.7.380=1 Query sum between -10(The min key in section tree is 0) and 10, get sum of 45, expected i * (i - 1) / 2
J.7.381=1 Query sum between -10(The min key in section tree is 0) and 11, get sum of 55, expected i * (i - 1) / 2
J.7.382=1 Query sum between -10(The min key in section tree is 0) and 12, get sum of 66, expected i * (i - 1) / 2
J.7.383=1 Query sum between -10(The min key in section tree is 0) and 13, get sum of 78, expected i * (i - 1) / 2
J.7.384=1 Query sum between -10(The min key in section tree is 0) and 14, get sum of 91, expected i * (i - 1) / 2
J.7.385=1 Query sum between -10(The min key in section tree is 0) and 15, get sum of 105, expected i * (i - 1) / 2
J.7.386=1 Query sum between -10(The min key in section tree is 0) and 16, get sum of 120, expected i * (i - 1) / 2
J.7.387=1 Query sum between -10(The min key in section tree is 0) and 17, get sum of 136, expected i * (i - 1) / 2
J.7.388=1 Query sum between -10(The min key in section tree is 0) and 18, get sum of 153, expected i * (i - 1) / 2
J.7.389=1 Query sum between -10(The min key in section tree is 0) and 19, get sum of 171, expected i * (i - 1) / 2
J.7.390=1 Query sum between -10(The min key in section tree is 0) and 20, get sum of 190, expected i * (i - 1) / 2
J.7.391=1 Query sum between -10(The min key in section tree is 0) and 21, get sum of 210, expected i * (i - 1) / 2
J.7.392=1 Query sum between -10(The min key in section tree is 0) and 22, get sum of 231, expected i * (i - 1) / 2
J.7.393=1 Query sum between -10(The min key in section tree is 0) and 23, get sum of 253, expected i * (i - 1) / 2
J.7.394=1 Query sum between -10(The min key in section tree is 0) and 24, get sum of 276, expected i * (i - 1) / 2
J.7.395=1 Query sum between -10(The min key in section tree is 0) and 25, get sum of 300, expected i * (i - 1) / 2
J.7.396=1 Query sum between -10(The min key in section tree is 0) and 26, get sum of 325, expected i * (i - 1) / 2
J.7.397=1 Query sum between -10(The min key in section tree is 0) and 27, get sum of 351, expected i * (i - 1) / 2
J.7.398=1 Query sum between -10(The min key in section tree is 0) and 28, get sum of 378, expected i * (i - 1) / 2
J.7.399=1 Query sum between -10(The min key in section tree is 0) and 29, get sum of 406, expected i * (i - 1) / 2
J.7.400=1 Query sum between -10(The min key in section tree is 0) and 30, get sum of 435, expected i * (i - 1) / 2
J.7.401=1 Query sum between -10(The min key in section tree is 0) and 31, get sum of 465, expected i * (i - 1) / 2
J.7.402=1 Query sum between -10(The min key in section tree is 0) and 32, get sum of 496, expected i * (i - 1) / 2
J.7.403=1 Query sum between -10(The min key in section tree is 0) and 33, get sum of 528, expected i * (i - 1) / 2
J.7.404=1 Query sum between -10(The min key in section tree is 0) and 34, get sum of 561, expected i * (i - 1) / 2
J.7.405=1 Query sum between -10(The min key in section tree is 0) and 35, get sum of 595, expected i * (i - 1) / 2
J.7.406=1 Query sum between -10(The min key in section tree is 0) and 36, get sum of 630, expected i * (i - 1) / 2
J.7.407=1 Query sum between -10(The min key in section tree is 0) and 37, get sum of 666, expected i * (i - 1) / 2
J.7.408=1 Query sum between -10(The min key in section tree is 0) and 38, get sum of 703, expected i * (i - 1) / 2
J.7.409=1 Query sum between -10(The min key in section tree is 0) and 39, get sum of 741, expected i * (i - 1) / 2
J.7.410=1 Query sum between -10(The min key in section tree is 0) and 40, get sum of 780, expected i * (i - 1) / 2
J.7.411=1 Query sum between -10(The min key in section tree is 0) and 41, get sum of 820, expected i * (i - 1) / 2
J.7.412=1 Query sum between -10(The min key in section tree is 0) and 42, get sum of 861, expected i * (i - 1) / 2
J.7.413=1 Query sum between -10(The min key in section tree is 0) and 43, get sum of 903, expected i * (i - 1) / 2
J.7.414=1 Query sum between -10(The min key in section tree is 0) and 44, get sum of 946, expected i * (i - 1) / 2
J.7.415=1 Query sum between -10(The min key in section tree is 0) and 45, get sum of 990, expected i * (i - 1) / 2
J.7.416=1 Query sum between -10(The min key in section tree is 0) and 46, get sum of 1035, expected i * (i - 1) / 2
J.7.417=1 Query sum between -10(The min key in section tree is 0) and 47, get sum of 1081, expected i * (i - 1) / 2
J.7.418=1 Query sum between -10(The min key in section tree is 0) and 48, get sum of 1128, expected i * (i - 1) / 2
J.7.419=1 Query sum between -10(The min key in section tree is 0) and 49, get sum of 1176, expected i * (i - 1) / 2
J.7.420=1 Query sum between -10(The min key in section tree is 0) and 50, get sum of 1225, expected i * (i - 1) / 2
J.7.421=1 Query sum between -10(The min key in section tree is 0) and 51, get sum of 1275, expected i * (i - 1) / 2
J.7.422=1 Query sum between -10(The min key in section tree is 0) and 52, get sum of 1326, expected i * (i - 1) / 2
J.7.423=1 Query sum between -10(The min key in section tree is 0) and 53, get sum of 1378, expected i * (i - 1) / 2
J.7.424=1 Query sum between -10(The min key in section tree is 0) and 54, get sum of 1431, expected i * (i - 1) / 2
J.7.425=1 Query sum between -10(The min key in section tree is 0) and 55, get sum of 1485, expected i * (i - 1) / 2
J.7.426=1 Query sum between -10(The min key in section tree is 0) and 56, get sum of 1540, expected i * (i - 1) / 2
J.7.427=1 Query sum between -10(The min key in section tree is 0) and 57, get sum of 1596, expected i * (i - 1) / 2
J.7.428=1 Query sum between -10(The min key in section tree is 0) and 58, get sum of 1653, expected i * (i - 1) / 2
J.7.429=1 Query sum between -10(The min key in section tree is 0) and 59, get sum of 1711, expected i * (i - 1) / 2
J.7.430=1 Query sum between -10(The min key in section tree is 0) and 60, get sum of 1770, expected i * (i - 1) / 2
J.7.431=1 Query sum between -10(The min key in section tree is 0) and 61, get sum of 1830, expected i * (i - 1) / 2
J.7.432=1 Query sum between -10(The min key in section tree is 0) and 62, get sum of 1891, expected i * (i - 1) / 2
J.7.433=1 Query sum between -10(The min key in section tree is 0) and 63, get sum of 1953, expected i * (i - 1) / 2
J.7.434=1 Query sum between -10(The min key in section tree is 0) and 64, get sum of 2016, expected i * (i - 1) / 2
J.7.435=1 Query sum between -10(The min key in section tree is 0) and 65, get sum of 2080, expected i * (i - 1) / 2
J.7.436=1 Query sum between -10(The min key in section tree is 0) and 66, get sum of 2145, expected i * (i - 1) / 2
J.7.437=1 Query sum between -10(The min key in section tree is 0) and 67, get sum of 2211, expected i * (i - 1) / 2
J.7.438=1 Query sum between -10(The min key in section tree is 0) and 68, get sum of 2278, expected i * (i - 1) / 2
J.7.439=1 Query sum between -10(The min key in section tree is 0) and 69, get sum of 2346, expected i * (i - 1) / 2
J.7.440=1 Query sum between -10(The min key in section tree is 0) and 70, get sum of 2415, expected i * (i - 1) / 2
J.7.441=1 Query sum between -10(The min key in section tree is 0) and 71, get sum of 2485, expected i * (i - 1) / 2
J.7.442=1 Query sum between -10(The min key in section tree is 0) and 72, get sum of 2556, expected i * (i - 1) / 2
J.7.443=1 Query sum between -10(The min key in section tree is 0) and 73, get sum of 2628, expected i * (i - 1) / 2
J.7.444=1 Query sum between -10(The min key in section tree is 0) and 74, get sum of 2701, expected i * (i - 1) / 2
J.7.445=1 Query sum between -10(The min key in section tree is 0) and 75, get sum of 2775, expected i * (i - 1) / 2
J.7.446=1 Query sum between -10(The min key in section tree is 0) and 76, get sum of 2850, expected i * (i - 1) / 2
J.7.447=1 Query sum between -10(The min key in section tree is 0) and 77, get sum of 2926, expected i * (i - 1) / 2
J.7.448=1 Query sum between -10(The min key in section tree is 0) and 78, get sum of 3003, expected i * (i - 1) / 2
J.7.449=1 Query sum between -10(The min key in section tree is 0) and 79, get sum of 3081, expected i * (i - 1) / 2
J.7.450=1 Query sum between -10(The min key in section tree is 0) and 80, get sum of 3160, expected i * (i - 1) / 2
J.7.451=1 Query sum between -10(The min key in section tree is 0) and 81, get sum of 3240, expected i * (i - 1) / 2
J.7.452=1 Query sum between -10(The min key in section tree is 0) and 82, get sum of 3321, expected i * (i - 1) / 2
J.7.453=1 Query sum between -10(The min key in section tree is 0) and 83, get sum of 3403, expected i * (i - 1) / 2
J.7.454=1 Query sum between -10(The min key in section tree is 0) and 84, get sum of 3486, expected i * (i - 1) / 2
J.7.455=1 Query sum between -10(The min key in section tree is 0) and 85, get sum of 3570, expected i * (i - 1) / 2
J.7.456=1 Query sum between -10(The min key in section tree is 0) and 86, get sum of 3655, expected i * (i - 1) / 2
J.7.457=1 Query sum between -10(The min key in section tree is 0) and 87, get sum of 3741, expected i * (i - 1) / 2
J.7.458=1 Query sum between -10(The min key in section tree is 0) and 88, get sum of 3828, expected i * (i - 1) / 2
J.7.459=1 Query sum between -10(The min key in section tree is 0) and 89, get sum of 3916, expected i * (i - 1) / 2
J.7.460=1 Query sum between -10(The min key in section tree is 0) and 90, get sum of 4005, expected i * (i - 1) / 2
J.7.461=1 Query sum between -10(The min key in section tree is 0) and 91, get sum of 4095, expected i * (i - 1) / 2
J.7.462=1 Query sum between -10(The min key in section tree is 0) and 92, get sum of 4186, expected i * (i - 1) / 2
J.7.463=1 Query sum between -10(The min key in section tree is 0) and 93, get sum of 4278, expected i * (i - 1) / 2
J.7.464=1 Query sum between -10(The min key in section tree is 0) and 94, get sum of 4371, expected i * (i - 1) / 2
J.7.465=1 Query sum between -10(The min key in section tree is 0) and 95, get sum of 4465, expected i * (i - 1) / 2
J.7.466=1 Query sum between -10(The min key in section tree is 0) and 96, get sum of 4560, expected i * (i - 1) / 2
J.7.467=1 Query sum between -10(The min key in section tree is 0) and 97, get sum of 4656, expected i * (i - 1) / 2
J.7.468=1 Query sum between -10(The min key in section tree is 0) and 98, get sum of 4753, expected i * (i - 1) / 2
J.7.469=1 Query sum between -10(The min key in section tree is 0) and 99, get sum of 4851, expected i * (i - 1) / 2
} succeeded(470/470). Pass test J.7.

>> Start Test J.7 checking query and add range {
J.8.0=1 Construct section sec0 with 100 node of key between 0 and 100, then add range 100 time to make it ascending.
J.8.1=1 Query sum from 15 to 16, the result is 15, expected result 15
J.8.2=1 Query sum from 15 to 17, the result is 31, expected result 31
J.8.3=1 Query sum from 15 to 18, the result is 48, expected result 48
J.8.4=1 Query sum from 15 to 19, the result is 66, expected result 66
J.8.5=1 Query sum from 15 to 20, the result is 85, expected result 85
J.8.6=1 Query sum from 15 to 21, the result is 105, expected result 105
J.8.7=1 Query sum from 15 to 22, the result is 126, expected result 126
J.8.8=1 Query sum from 15 to 23, the result is 148, expected result 148
J.8.9=1 Query sum from 15 to 24, the result is 171, expected result 171
J.8.10=1 Query sum from 15 to 25, the result is 195, expected result 195
J.8.11=1 Query sum from 15 to 26, the result is 220, expected result 220
J.8.12=1 Query sum from 15 to 27, the result is 246, expected result 246
J.8.13=1 Query sum from 15 to 28, the result is 273, expected result 273
J.8.14=1 Query sum from 15 to 29, the result is 301, expected result 301
J.8.15=1 Query sum from 15 to 30, the result is 330, expected result 330
J.8.16=1 Query sum from 15 to 31, the result is 360, expected result 360
J.8.17=1 Query sum from 15 to 32, the result is 391, expected result 391
J.8.18=1 Query sum from 15 to 33, the result is 423, expected result 423
J.8.19=1 Query sum from 15 to 34, the result is 456, expected result 456
J.8.20=1 Query sum from 15 to 35, the result is 490, expected result 490
J.8.21=1 Query sum from 15 to 36, the result is 525, expected result 525
J.8.22=1 Query sum from 15 to 37, the result is 561, expected result 561
J.8.23=1 Query sum from 15 to 38, the result is 598, expected result 598
J.8.24=1 Query sum from 15 to 39, the result is 636, expected result 636
J.8.25=1 Query sum from 15 to 40, the result is 675, expected result 675
J.8.26=1 Query sum from 15 to 41, the result is 715, expected result 715
J.8.27=1 Query sum from 15 to 42, the result is 756, expected result 756
J.8.28=1 Query sum from 15 to 43, the result is 798, expected result 798
J.8.29=1 Query sum from 15 to 44, the result is 841, expected result 841
J.8.30=1 Query sum from 15 to 45, the result is 885, expected result 885
J.8.31=1 Query sum from 15 to 46, the result is 930, expected result 930
J.8.32=1 Query sum from 15 to 47, the result is 976, expected result 976
J.8.33=1 Query sum from 15 to 48, the result is 1023, expected result 1023
J.8.34=1 Query sum from 15 to 49, the result is 1071, expected result 1071
J.8.35=1 Query sum from 15 to 50, the result is 1120, expected result 1120
J.8.36=1 Query sum from 15 to 51, the result is 1170, expected result 1170
J.8.37=1 Query sum from 15 to 52, the result is 1221, expected result 1221
J.8.38=1 Query sum from 15 to 53, the result is 1273, expected result 1273
J.8.39=1 Query sum from 15 to 54, the result is 1326, expected result 1326
J.8.40=1 Query sum from 15 to 55, the result is 1380, expected result 1380
J.8.41=1 Query sum from 15 to 56, the result is 1435, expected result 1435
J.8.42=1 Query sum from 15 to 57, the result is 1491, expected result 1491
J.8.43=1 Query sum from 15 to 58, the result is 1548, expected result 1548
J.8.44=1 Query sum from 15 to 59, the result is 1606, expected result 1606
J.8.45=1 Query sum from 15 to 60, the result is 1665, expected result 1665
J.8.46=1 Query sum from 15 to 61, the result is 1725, expected result 1725
J.8.47=1 Query sum from 15 to 62, the result is 1786, expected result 1786
J.8.48=1 Query sum from 15 to 63, the result is 1848, expected result 1848
J.8.49=1 Query sum from 15 to 64, the result is 1911, expected result 1911
J.8.50=1 Query sum from 15 to 65, the result is 1975, expected result 1975
J.8.51=1 Query sum from 15 to 66, the result is 2040, expected result 2040
J.8.52=1 Query sum from 15 to 67, the result is 2106, expected result 2106
J.8.53=1 Query sum from 15 to 68, the result is 2173, expected result 2173
J.8.54=1 Query sum from 15 to 69, the result is 2241, expected result 2241
J.8.55=1 Query sum from 15 to 70, the result is 2310, expected result 2310
J.8.56=1 Query sum from 15 to 71, the result is 2380, expected result 2380
J.8.57=1 Query sum from 15 to 72, the result is 2451, expected result 2451
J.8.58=1 Query sum from 15 to 73, the result is 2523, expected result 2523
J.8.59=1 Query sum from 15 to 74, the result is 2596, expected result 2596
J.8.60=1 Query sum from 15 to 75, the result is 2670, expected result 2670
J.8.61=1 Query sum from 15 to 76, the result is 2745, expected result 2745
J.8.62=1 Query sum from 15 to 77, the result is 2821, expected result 2821
J.8.63=1 Query sum from 15 to 78, the result is 2898, expected result 2898
J.8.64=1 Query sum from 15 to 79, the result is 2976, expected result 2976
J.8.65=1 Query sum from 15 to 80, the result is 3055, expected result 3055
J.8.66=1 Query sum from 15 to 81, the result is 3135, expected result 3135
J.8.67=1 Query sum from 15 to 82, the result is 3216, expected result 3216
J.8.68=1 Query sum from 15 to 83, the result is 3298, expected result 3298
J.8.69=1 Query sum from 15 to 84, the result is 3381, expected result 3381
J.8.70=1 Query sum from 15 to 85, the result is 3465, expected result 3465
J.8.71=1 Query sum from 15 to 86, the result is 3550, expected result 3550
J.8.72=1 Query sum from 15 to 87, the result is 3636, expected result 3636
J.8.73=1 Query sum from 15 to 88, the result is 3723, expected result 3723
J.8.74=1 Query sum from 15 to 89, the result is 3811, expected result 3811
J.8.75=1 Query sum from 15 to 90, the result is 3900, expected result 3900
J.8.76=1 Query sum from 15 to 91, the result is 3990, expected result 3990
J.8.77=1 Query sum from 15 to 92, the result is 4081, expected result 4081
J.8.78=1 Query sum from 15 to 93, the result is 4173, expected result 4173
J.8.79=1 Query sum from 15 to 94, the result is 4266, expected result 4266
J.8.80=1 Query sum from 15 to 95, the result is 4360, expected result 4360
J.8.81=1 Query sum from 15 to 96, the result is 4455, expected result 4455
J.8.82=1 Query sum from 15 to 97, the result is 4551, expected result 4551
J.8.83=1 Query sum from 15 to 98, the result is 4648, expected result 4648
J.8.84=1 Query sum from 15 to 99, the result is 4746, expected result 4746
J.8.85=1 Query sum from 0 to 125(The max key in tree is 99), get sum of 4950, expected 4950
J.8.86=1 Query sum from 1 to 125(The max key in tree is 99), get sum of 4950, expected 4950
J.8.87=1 Query sum from 2 to 125(The max key in tree is 99), get sum of 4949, expected 4949
J.8.88=1 Query sum from 3 to 125(The max key in tree is 99), get sum of 4947, expected 4947
J.8.89=1 Query sum from 4 to 125(The max key in tree is 99), get sum of 4944, expected 4944
J.8.90=1 Query sum from 5 to 125(The max key in tree is 99), get sum of 4940, expected 4940
J.8.91=1 Query sum from 6 to 125(The max key in tree is 99), get sum of 4935, expected 4935
J.8.92=1 Query sum from 7 to 125(The max key in tree is 99), get sum of 4929, expected 4929
J.8.93=1 Query sum from 8 to 125(The max key in tree is 99), get sum of 4922, expected 4922
J.8.94=1 Query sum from 9 to 125(The max key in tree is 99), get sum of 4914, expected 4914
J.8.95=1 Query sum from 10 to 125(The max key in tree is 99), get sum of 4905, expected 4905
J.8.96=1 Query sum from 11 to 125(The max key in tree is 99), get sum of 4895, expected 4895
J.8.97=1 Query sum from 12 to 125(The max key in tree is 99), get sum of 4884, expected 4884
J.8.98=1 Query sum from 13 to 125(The max key in tree is 99), get sum of 4872, expected 4872
J.8.99=1 Query sum from 14 to 125(The max key in tree is 99), get sum of 4859, expected 4859
J.8.100=1 Query sum from 15 to 125(The max key in tree is 99), get sum of 4845, expected 4845
J.8.101=1 Query sum from 16 to 125(The max key in tree is 99), get sum of 4830, expected 4830
J.8.102=1 Query sum from 17 to 125(The max key in tree is 99), get sum of 4814, expected 4814
J.8.103=1 Query sum from 18 to 125(The max key in tree is 99), get sum of 4797, expected 4797
J.8.104=1 Query sum from 19 to 125(The max key in tree is 99), get sum of 4779, expected 4779
J.8.105=1 Query sum from 20 to 125(The max key in tree is 99), get sum of 4760, expected 4760
J.8.106=1 Query sum from 21 to 125(The max key in tree is 99), get sum of 4740, expected 4740
J.8.107=1 Query sum from 22 to 125(The max key in tree is 99), get sum of 4719, expected 4719
J.8.108=1 Query sum from 23 to 125(The max key in tree is 99), get sum of 4697, expected 4697
J.8.109=1 Query sum from 24 to 125(The max key in tree is 99), get sum of 4674, expected 4674
J.8.110=1 Query sum from 25 to 125(The max key in tree is 99), get sum of 4650, expected 4650
J.8.111=1 Query sum from 26 to 125(The max key in tree is 99), get sum of 4625, expected 4625
J.8.112=1 Query sum from 27 to 125(The max key in tree is 99), get sum of 4599, expected 4599
J.8.113=1 Query sum from 28 to 125(The max key in tree is 99), get sum of 4572, expected 4572
J.8.114=1 Query sum from 29 to 125(The max key in tree is 99), get sum of 4544, expected 4544
J.8.115=1 Query sum from 30 to 125(The max key in tree is 99), get sum of 4515, expected 4515
J.8.116=1 Query sum from 31 to 125(The max key in tree is 99), get sum of 4485, expected 4485
J.8.117=1 Query sum from 32 to 125(The max key in tree is 99), get sum of 4454, expected 4454
J.8.118=1 Query sum from 33 to 125(The max key in tree is 99), get sum of 4422, expected 4422
J.8.119=1 Query sum from 34 to 125(The max key in tree is 99), get sum of 4389, expected 4389
J.8.120=1 Query sum from 35 to 125(The max key in tree is 99), get sum of 4355, expected 4355
J.8.121=1 Query sum from 36 to 125(The max key in tree is 99), get sum of 4320, expected 4320
J.8.122=1 Query sum from 37 to 125(The max key in tree is 99), get sum of 4284, expected 4284
J.8.123=1 Query sum from 38 to 125(The max key in tree is 99), get sum of 4247, expected 4247
J.8.124=1 Query sum from 39 to 125(The max key in tree is 99), get sum of 4209, expected 4209
J.8.125=1 Query sum from 40 to 125(The max key in tree is 99), get sum of 4170, expected 4170
J.8.126=1 Query sum from 41 to 125(The max key in tree is 99), get sum of 4130, expected 4130
J.8.127=1 Query sum from 42 to 125(The max key in tree is 99), get sum of 4089, expected 4089
J.8.128=1 Query sum from 43 to 125(The max key in tree is 99), get sum of 4047, expected 4047
J.8.129=1 Query sum from 44 to 125(The max key in tree is 99), get sum of 4004, expected 4004
J.8.130=1 Query sum from 45 to 125(The max key in tree is 99), get sum of 3960, expected 3960
J.8.131=1 Query sum from 46 to 125(The max key in tree is 99), get sum of 3915, expected 3915
J.8.132=1 Query sum from 47 to 125(The max key in tree is 99), get sum of 3869, expected 3869
J.8.133=1 Query sum from 48 to 125(The max key in tree is 99), get sum of 3822, expected 3822
J.8.134=1 Query sum from 49 to 125(The max key in tree is 99), get sum of 3774, expected 3774
J.8.135=1 Query sum from 50 to 125(The max key in tree is 99), get sum of 3725, expected 3725
J.8.136=1 Query sum from 51 to 125(The max key in tree is 99), get sum of 3675, expected 3675
J.8.137=1 Query sum from 52 to 125(The max key in tree is 99), get sum of 3624, expected 3624
J.8.138=1 Query sum from 53 to 125(The max key in tree is 99), get sum of 3572, expected 3572
J.8.139=1 Query sum from 54 to 125(The max key in tree is 99), get sum of 3519, expected 3519
J.8.140=1 Query sum from 55 to 125(The max key in tree is 99), get sum of 3465, expected 3465
J.8.141=1 Query sum from 56 to 125(The max key in tree is 99), get sum of 3410, expected 3410
J.8.142=1 Query sum from 57 to 125(The max key in tree is 99), get sum of 3354, expected 3354
J.8.143=1 Query sum from 58 to 125(The max key in tree is 99), get sum of 3297, expected 3297
J.8.144=1 Query sum from 59 to 125(The max key in tree is 99), get sum of 3239, expected 3239
J.8.145=1 Query sum from 60 to 125(The max key in tree is 99), get sum of 3180, expected 3180
J.8.146=1 Query sum from 61 to 125(The max key in tree is 99), get sum of 3120, expected 3120
J.8.147=1 Query sum from 62 to 125(The max key in tree is 99), get sum of 3059, expected 3059
J.8.148=1 Query sum from 63 to 125(The max key in tree is 99), get sum of 2997, expected 2997
J.8.149=1 Query sum from 64 to 125(The max key in tree is 99), get sum of 2934, expected 2934
J.8.150=1 Query sum from 65 to 125(The max key in tree is 99), get sum of 2870, expected 2870
J.8.151=1 Query sum from 66 to 125(The max key in tree is 99), get sum of 2805, expected 2805
J.8.152=1 Query sum from 67 to 125(The max key in tree is 99), get sum of 2739, expected 2739
J.8.153=1 Query sum from 68 to 125(The max key in tree is 99), get sum of 2672, expected 2672
J.8.154=1 Query sum from 69 to 125(The max key in tree is 99), get sum of 2604, expected 2604
J.8.155=1 Query sum from 70 to 125(The max key in tree is 99), get sum of 2535, expected 2535
J.8.156=1 Query sum from 71 to 125(The max key in tree is 99), get sum of 2465, expected 2465
J.8.157=1 Query sum from 72 to 125(The max key in tree is 99), get sum of 2394, expected 2394
J.8.158=1 Query sum from 73 to 125(The max key in tree is 99), get sum of 2322, expected 2322
J.8.159=1 Query sum from 74 to 125(The max key in tree is 99), get sum of 2249, expected 2249
J.8.160=1 Query sum from 75 to 125(The max key in tree is 99), get sum of 2175, expected 2175
J.8.161=1 Query sum from 76 to 125(The max key in tree is 99), get sum of 2100, expected 2100
J.8.162=1 Query sum from 77 to 125(The max key in tree is 99), get sum of 2024, expected 2024
J.8.163=1 Query sum from 78 to 125(The max key in tree is 99), get sum of 1947, expected 1947
J.8.164=1 Query sum from 79 to 125(The max key in tree is 99), get sum of 1869, expected 1869
J.8.165=1 Query sum from 80 to 125(The max key in tree is 99), get sum of 1790, expected 1790
J.8.166=1 Query sum from 81 to 125(The max key in tree is 99), get sum of 1710, expected 1710
J.8.167=1 Query sum from 82 to 125(The max key in tree is 99), get sum of 1629, expected 1629
J.8.168=1 Query sum from 83 to 125(The max key in tree is 99), get sum of 1547, expected 1547
J.8.169=1 Query sum from 84 to 125(The max key in tree is 99), get sum of 1464, expected 1464
J.8.170=1 Query sum from 85 to 125(The max key in tree is 99), get sum of 1380, expected 1380
J.8.171=1 Query sum from 86 to 125(The max key in tree is 99), get sum of 1295, expected 1295
J.8.172=1 Query sum from 87 to 125(The max key in tree is 99), get sum of 1209, expected 1209
J.8.173=1 Query sum from 88 to 125(The max key in tree is 99), get sum of 1122, expected 1122
J.8.174=1 Query sum from 89 to 125(The max key in tree is 99), get sum of 1034, expected 1034
J.8.175=1 Query sum from 90 to 125(The max key in tree is 99), get sum of 945, expected 945
J.8.176=1 Query sum from 91 to 125(The max key in tree is 99), get sum of 855, expected 855
J.8.177=1 Query sum from 92 to 125(The max key in tree is 99), get sum of 764, expected 764
J.8.178=1 Query sum from 93 to 125(The max key in tree is 99), get sum of 672, expected 672
J.8.179=1 Query sum from 94 to 125(The max key in tree is 99), get sum of 579, expected 579
J.8.180=1 Query sum from 95 to 125(The max key in tree is 99), get sum of 485, expected 485
J.8.181=1 Query sum from 96 to 125(The max key in tree is 99), get sum of 390, expected 390
J.8.182=1 Query sum from 97 to 125(The max key in tree is 99), get sum of 294, expected 294
J.8.183=1 Query sum from 98 to 125(The max key in tree is 99), get sum of 197, expected 197
J.8.184=1 Query sum from 99 to 125(The max key in tree is 99), get sum of 99, expected 99
J.8.185=1 Query sum between -10(The min key in section tree is 0) and 0, get sum of 0, expected i * (i - 1) / 2
J.8.186=1 Query sum between -10(The min key in section tree is 0) and 1, get sum of 0, expected i * (i - 1) / 2
J.8.187=1 Query sum between -10(The min key in section tree is 0) and 2, get sum of 1, expected i * (i - 1) / 2
J.8.188=1 Query sum between -10(The min key in section tree is 0) and 3, get sum of 3, expected i * (i - 1) / 2
J.8.189=1 Query sum between -10(The min key in section tree is 0) and 4, get sum of 6, expected i * (i - 1) / 2
J.8.190=1 Query sum between -10(The min key in section tree is 0) and 5, get sum of 10, expected i * (i - 1) / 2
J.8.191=1 Query sum between -10(The min key in section tree is 0) and 6, get sum of 15, expected i * (i - 1) / 2
J.8.192=1 Query sum between -10(The min key in section tree is 0) and 7, get sum of 21, expected i * (i - 1) / 2
J.8.193=1 Query sum between -10(The min key in section tree is 0) and 8, get sum of 28, expected i * (i - 1) / 2
J.8.194=1 Query sum between -10(The min key in section tree is 0) and 9, get sum of 36, expected i * (i - 1) / 2
J.8.195=1 Query sum between -10(The min key in section tree is 0) and 10, get sum of 45, expected i * (i - 1) / 2
J.8.196=1 Query sum between -10(The min key in section tree is 0) and 11, get sum of 55, expected i * (i - 1) / 2
J.8.197=1 Query sum between -10(The min key in section tree is 0) and 12, get sum of 66, expected i * (i - 1) / 2
J.8.198=1 Query sum between -10(The min key in section tree is 0) and 13, get sum of 78, expected i * (i - 1) / 2
J.8.199=1 Query sum between -10(The min key in section tree is 0) and 14, get sum of 91, expected i * (i - 1) / 2
J.8.200=1 Query sum between -10(The min key in section tree is 0) and 15, get sum of 105, expected i * (i - 1) / 2
J.8.201=1 Query sum between -10(The min key in section tree is 0) and 16, get sum of 120, expected i * (i - 1) / 2
J.8.202=1 Query sum between -10(The min key in section tree is 0) and 17, get sum of 136, expected i * (i - 1) / 2
J.8.203=1 Query sum between -10(The min key in section tree is 0) and 18, get sum of 153, expected i * (i - 1) / 2
J.8.204=1 Query sum between -10(The min key in section tree is 0) and 19, get sum of 171, expected i * (i - 1) / 2
J.8.205=1 Query sum between -10(The min key in section tree is 0) and 20, get sum of 190, expected i * (i - 1) / 2
J.8.206=1 Query sum between -10(The min key in section tree is 0) and 21, get sum of 210, expected i * (i - 1) / 2
J.8.207=1 Query sum between -10(The min key in section tree is 0) and 22, get sum of 231, expected i * (i - 1) / 2
J.8.208=1 Query sum between -10(The min key in section tree is 0) and 23, get sum of 253, expected i * (i - 1) / 2
J.8.209=1 Query sum between -10(The min key in section tree is 0) and 24, get sum of 276, expected i * (i - 1) / 2
J.8.210=1 Query sum between -10(The min key in section tree is 0) and 25, get sum of 300, expected i * (i - 1) / 2
J.8.211=1 Query sum between -10(The min key in section tree is 0) and 26, get sum of 325, expected i * (i - 1) / 2
J.8.212=1 Query sum between -10(The min key in section tree is 0) and 27, get sum of 351, expected i * (i - 1) / 2
J.8.213=1 Query sum between -10(The min key in section tree is 0) and 28, get sum of 378, expected i * (i - 1) / 2
J.8.214=1 Query sum between -10(The min key in section tree is 0) and 29, get sum of 406, expected i * (i - 1) / 2
J.8.215=1 Query sum between -10(The min key in section tree is 0) and 30, get sum of 435, expected i * (i - 1) / 2
J.8.216=1 Query sum between -10(The min key in section tree is 0) and 31, get sum of 465, expected i * (i - 1) / 2
J.8.217=1 Query sum between -10(The min key in section tree is 0) and 32, get sum of 496, expected i * (i - 1) / 2
J.8.218=1 Query sum between -10(The min key in section tree is 0) and 33, get sum of 528, expected i * (i - 1) / 2
J.8.219=1 Query sum between -10(The min key in section tree is 0) and 34, get sum of 561, expected i * (i - 1) / 2
J.8.220=1 Query sum between -10(The min key in section tree is 0) and 35, get sum of 595, expected i * (i - 1) / 2
J.8.221=1 Query sum between -10(The min key in section tree is 0) and 36, get sum of 630, expected i * (i - 1) / 2
J.8.222=1 Query sum between -10(The min key in section tree is 0) and 37, get sum of 666, expected i * (i - 1) / 2
J.8.223=1 Query sum between -10(The min key in section tree is 0) and 38, get sum of 703, expected i * (i - 1) / 2
J.8.224=1 Query sum between -10(The min key in section tree is 0) and 39, get sum of 741, expected i * (i - 1) / 2
J.8.225=1 Query sum between -10(The min key in section tree is 0) and 40, get sum of 780, expected i * (i - 1) / 2
J.8.226=1 Query sum between -10(The min key in section tree is 0) and 41, get sum of 820, expected i * (i - 1) / 2
J.8.227=1 Query sum between -10(The min key in section tree is 0) and 42, get sum of 861, expected i * (i - 1) / 2
J.8.228=1 Query sum between -10(The min key in section tree is 0) and 43, get sum of 903, expected i * (i - 1) / 2
J.8.229=1 Query sum between -10(The min key in section tree is 0) and 44, get sum of 946, expected i * (i - 1) / 2
J.8.230=1 Query sum between -10(The min key in section tree is 0) and 45, get sum of 990, expected i * (i - 1) / 2
J.8.231=1 Query sum between -10(The min key in section tree is 0) and 46, get sum of 1035, expected i * (i - 1) / 2
J.8.232=1 Query sum between -10(The min key in section tree is 0) and 47, get sum of 1081, expected i * (i - 1) / 2
J.8.233=1 Query sum between -10(The min key in section tree is 0) and 48, get sum of 1128, expected i * (i - 1) / 2
J.8.234=1 Query sum between -10(The min key in section tree is 0) and 49, get sum of 1176, expected i * (i - 1) / 2
J.8.235=1 Query sum between -10(The min key in section tree is 0) and 50, get sum of 1225, expected i * (i - 1) / 2
J.8.236=1 Query sum between -10(The min key in section tree is 0) and 51, get sum of 1275, expected i * (i - 1) / 2
J.8.237=1 Query sum between -10(The min key in section tree is 0) and 52, get sum of 1326, expected i * (i - 1) / 2
J.8.238=1 Query sum between -10(The min key in section tree is 0) and 53, get sum of 1378, expected i * (i - 1) / 2
J.8.239=1 Query sum between -10(The min key in section tree is 0) and 54, get sum of 1431, expected i * (i - 1) / 2
J.8.240=1 Query sum between -10(The min key in section tree is 0) and 55, get sum of 1485, expected i * (i - 1) / 2
J.8.241=1 Query sum between -10(The min key in section tree is 0) and 56, get sum of 1540, expected i * (i - 1) / 2
J.8.242=1 Query sum between -10(The min key in section tree is 0) and 57, get sum of 1596, expected i * (i - 1) / 2
J.8.243=1 Query sum between -10(The min key in section tree is 0) and 58, get sum of 1653, expected i * (i - 1) / 2
J.8.244=1 Query sum between -10(The min key in section tree is 0) and 59, get sum of 1711, expected i * (i - 1) / 2
J.8.245=1 Query sum between -10(The min key in section tree is 0) and 60, get sum of 1770, expected i * (i - 1) / 2
J.8.246=1 Query sum between -10(The min key in section tree is 0) and 61, get sum of 1830, expected i * (i - 1) / 2
J.8.247=1 Query sum between -10(The min key in section tree is 0) and 62, get sum of 1891, expected i * (i - 1) / 2
J.8.248=1 Query sum between -10(The min key in section tree is 0) and 63, get sum of 1953, expected i * (i - 1) / 2
J.8.249=1 Query sum between -10(The min key in section tree is 0) and 64, get sum of 2016, expected i * (i - 1) / 2
J.8.250=1 Query sum between -10(The min key in section tree is 0) and 65, get sum of 2080, expected i * (i - 1) / 2
J.8.251=1 Query sum between -10(The min key in section tree is 0) and 66, get sum of 2145, expected i * (i - 1) / 2
J.8.252=1 Query sum between -10(The min key in section tree is 0) and 67, get sum of 2211, expected i * (i - 1) / 2
J.8.253=1 Query sum between -10(The min key in section tree is 0) and 68, get sum of 2278, expected i * (i - 1) / 2
J.8.254=1 Query sum between -10(The min key in section tree is 0) and 69, get sum of 2346, expected i * (i - 1) / 2
J.8.255=1 Query sum between -10(The min key in section tree is 0) and 70, get sum of 2415, expected i * (i - 1) / 2
J.8.256=1 Query sum between -10(The min key in section tree is 0) and 71, get sum of 2485, expected i * (i - 1) / 2
J.8.257=1 Query sum between -10(The min key in section tree is 0) and 72, get sum of 2556, expected i * (i - 1) / 2
J.8.258=1 Query sum between -10(The min key in section tree is 0) and 73, get sum of 2628, expected i * (i - 1) / 2
J.8.259=1 Query sum between -10(The min key in section tree is 0) and 74, get sum of 2701, expected i * (i - 1) / 2
J.8.260=1 Query sum between -10(The min key in section tree is 0) and 75, get sum of 2775, expected i * (i - 1) / 2
J.8.261=1 Query sum between -10(The min key in section tree is 0) and 76, get sum of 2850, expected i * (i - 1) / 2
J.8.262=1 Query sum between -10(The min key in section tree is 0) and 77, get sum of 2926, expected i * (i - 1) / 2
J.8.263=1 Query sum between -10(The min key in section tree is 0) and 78, get sum of 3003, expected i * (i - 1) / 2
J.8.264=1 Query sum between -10(The min key in section tree is 0) and 79, get sum of 3081, expected i * (i - 1) / 2
J.8.265=1 Query sum between -10(The min key in section tree is 0) and 80, get sum of 3160, expected i * (i - 1) / 2
J.8.266=1 Query sum between -10(The min key in section tree is 0) and 81, get sum of 3240, expected i * (i - 1) / 2
J.8.267=1 Query sum between -10(The min key in section tree is 0) and 82, get sum of 3321, expected i * (i - 1) / 2
J.8.268=1 Query sum between -10(The min key in section tree is 0) and 83, get sum of 3403, expected i * (i - 1) / 2
J.8.269=1 Query sum between -10(The min key in section tree is 0) and 84, get sum of 3486, expected i * (i - 1) / 2
J.8.270=1 Query sum between -10(The min key in section tree is 0) and 85, get sum of 3570, expected i * (i - 1) / 2
J.8.271=1 Query sum between -10(The min key in section tree is 0) and 86, get sum of 3655, expected i * (i - 1) / 2
J.8.272=1 Query sum between -10(The min key in section tree is 0) and 87, get sum of 3741, expected i * (i - 1) / 2
J.8.273=1 Query sum between -10(The min key in section tree is 0) and 88, get sum of 3828, expected i * (i - 1) / 2
J.8.274=1 Query sum between -10(The min key in section tree is 0) and 89, get sum of 3916, expected i * (i - 1) / 2
J.8.275=1 Query sum between -10(The min key in section tree is 0) and 90, get sum of 4005, expected i * (i - 1) / 2
J.8.276=1 Query sum between -10(The min key in section tree is 0) and 91, get sum of 4095, expected i * (i - 1) / 2
J.8.277=1 Query sum between -10(The min key in section tree is 0) and 92, get sum of 4186, expected i * (i - 1) / 2
J.8.278=1 Query sum between -10(The min key in section tree is 0) and 93, get sum of 4278, expected i * (i - 1) / 2
J.8.279=1 Query sum between -10(The min key in section tree is 0) and 94, get sum of 4371, expected i * (i - 1) / 2
J.8.280=1 Query sum between -10(The min key in section tree is 0) and 95, get sum of 4465, expected i * (i - 1) / 2
J.8.281=1 Query sum between -10(The min key in section tree is 0) and 96, get sum of 4560, expected i * (i - 1) / 2
J.8.282=1 Query sum between -10(The min key in section tree is 0) and 97, get sum of 4656, expected i * (i - 1) / 2
J.8.283=1 Query sum between -10(The min key in section tree is 0) and 98, get sum of 4753, expected i * (i - 1) / 2
J.8.284=1 Query sum between -10(The min key in section tree is 0) and 99, get sum of 4851, expected i * (i - 1) / 2
J.8.285=1 sec0 add range from 0 to 100 1
J.8.286=1 get value of key0, value: 0, expected 0
J.8.287=1 get value of key1, value: 2, expected 2
J.8.288=1 get value of key2, value: 4, expected 4
J.8.289=1 get value of key3, value: 6, expected 6
J.8.290=1 get value of key4, value: 8, expected 8
J.8.291=1 get value of key5, value: 10, expected 10
J.8.292=1 get value of key6, value: 12, expected 12
J.8.293=1 get value of key7, value: 14, expected 14
J.8.294=1 get value of key8, value: 16, expected 16
J.8.295=1 get value of key9, value: 18, expected 18
J.8.296=1 get value of key10, value: 20, expected 20
J.8.297=1 get value of key11, value: 22, expected 22
J.8.298=1 get value of key12, value: 24, expected 24
J.8.299=1 get value of key13, value: 26, expected 26
J.8.300=1 get value of key14, value: 28, expected 28
J.8.301=1 get value of key15, value: 30, expected 30
J.8.302=1 get value of key16, value: 32, expected 32
J.8.303=1 get value of key17, value: 34, expected 34
J.8.304=1 get value of key18, value: 36, expected 36
J.8.305=1 get value of key19, value: 38, expected 38
J.8.306=1 get value of key20, value: 40, expected 40
J.8.307=1 get value of key21, value: 42, expected 42
J.8.308=1 get value of key22, value: 44, expected 44
J.8.309=1 get value of key23, value: 46, expected 46
J.8.310=1 get value of key24, value: 48, expected 48
J.8.311=1 get value of key25, value: 50, expected 50
J.8.312=1 get value of key26, value: 52, expected 52
J.8.313=1 get value of key27, value: 54, expected 54
J.8.314=1 get value of key28, value: 56, expected 56
J.8.315=1 get value of key29, value: 58, expected 58
J.8.316=1 get value of key30, value: 60, expected 60
J.8.317=1 get value of key31, value: 62, expected 62
J.8.318=1 get value of key32, value: 64, expected 64
J.8.319=1 get value of key33, value: 66, expected 66
J.8.320=1 get value of key34, value: 68, expected 68
J.8.321=1 get value of key35, value: 70, expected 70
J.8.322=1 get value of key36, value: 72, expected 72
J.8.323=1 get value of key37, value: 74, expected 74
J.8.324=1 get value of key38, value: 76, expected 76
J.8.325=1 get value of key39, value: 78, expected 78
J.8.326=1 get value of key40, value: 80, expected 80
J.8.327=1 get value of key41, value: 82, expected 82
J.8.328=1 get value of key42, value: 84, expected 84
J.8.329=1 get value of key43, value: 86, expected 86
J.8.330=1 get value of key44, value: 88, expected 88
J.8.331=1 get value of key45, value: 90, expected 90
J.8.332=1 get value of key46, value: 92, expected 92
J.8.333=1 get value of key47, value: 94, expected 94
J.8.334=1 get value of key48, value: 96, expected 96
J.8.335=1 get value of key49, value: 98, expected 98
J.8.336=1 get value of key50, value: 100, expected 100
J.8.337=1 get value of key51, value: 102, expected 102
J.8.338=1 get value of key52, value: 104, expected 104
J.8.339=1 get value of key53, value: 106, expected 106
J.8.340=1 get value of key54, value: 108, expected 108
J.8.341=1 get value of key55, value: 110, expected 110
J.8.342=1 get value of key56, value: 112, expected 112
J.8.343=1 get value of key57, value: 114, expected 114
J.8.344=1 get value of key58, value: 116, expected 116
J.8.345=1 get value of key59, value: 118, expected 118
J.8.346=1 get value of key60, value: 120, expected 120
J.8.347=1 get value of key61, value: 122, expected 122
J.8.348=1 get value of key62, value: 124, expected 124
J.8.349=1 get value of key63, value: 126, expected 126
J.8.350=1 get value of key64, value: 128, expected 128
J.8.351=1 get value of key65, value: 130, expected 130
J.8.352=1 get value of key66, value: 132, expected 132
J.8.353=1 get value of key67, value: 134, expected 134
J.8.354=1 get value of key68, value: 136, expected 136
J.8.355=1 get value of key69, value: 138, expected 138
J.8.356=1 get value of key70, value: 140, expected 140
J.8.357=1 get value of key71, value: 142, expected 142
J.8.358=1 get value of key72, value: 144, expected 144
J.8.359=1 get value of key73, value: 146, expected 146
J.8.360=1 get value of key74, value: 148, expected 148
J.8.361=1 get value of key75, value: 150, expected 150
J.8.362=1 get value of key76, value: 152, expected 152
J.8.363=1 get value of key77, value: 154, expected 154
J.8.364=1 get value of key78, value: 156, expected 156
J.8.365=1 get value of key79, value: 158, expected 158
J.8.366=1 get value of key80, value: 160, expected 160
J.8.367=1 get value of key81, value: 162, expected 162
J.8.368=1 get value of key82, value: 164, expected 164
J.8.369=1 get value of key83, value: 166, expected 166
J.8.370=1 get value of key84, value: 168, expected 168
J.8.371=1 get value of key85, value: 170, expected 170
J.8.372=1 get value of key86, value: 172, expected 172
J.8.373=1 get value of key87, value: 174, expected 174
J.8.374=1 get value of key88, value: 176, expected 176
J.8.375=1 get value of key89, value: 178, expected 178
J.8.376=1 get value of key90, value: 180, expected 180
J.8.377=1 get value of key91, value: 182, expected 182
J.8.378=1 get value of key92, value: 184, expected 184
J.8.379=1 get value of key93, value: 186, expected 186
J.8.380=1 get value of key94, value: 188, expected 188
J.8.381=1 get value of key95, value: 190, expected 190
J.8.382=1 get value of key96, value: 192, expected 192
J.8.383=1 get value of key97, value: 194, expected 194
J.8.384=1 get value of key98, value: 196, expected 196
J.8.385=1 get value of key99, value: 198, expected 198
} succeeded(386/386). Pass test J.8.

-----------------------
End test section vessel, succeeded part(8/8)
